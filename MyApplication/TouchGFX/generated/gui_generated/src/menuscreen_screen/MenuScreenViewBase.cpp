/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menuscreen_screen/MenuScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MenuScreenViewBase::MenuScreenViewBase() :
    buttonCallback(this, &MenuScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background_image.setXY(0, 0);
    background_image.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_240X320_SHATTERED_RAIN_ID));
    add(background_image);

    menu_image.setBitmap(touchgfx::Bitmap(BITMAP_THIS_IS_FINE_ID));
    menu_image.setPosition(37, 14, 166, 180);
    menu_image.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(menu_image);

    drinkCoffee_button.setXY(33, 205);
    drinkCoffee_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_DISABLED_ID));
    drinkCoffee_button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_C4DE));
    drinkCoffee_button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    drinkCoffee_button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    drinkCoffee_button.setAction(buttonCallback);
    add(drinkCoffee_button);

    fire_button.setXY(65, 262);
    fire_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
    fire_button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_B1MJ));
    fire_button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    fire_button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    fire_button.setAction(buttonCallback);
    add(fire_button);
}

MenuScreenViewBase::~MenuScreenViewBase()
{

}

void MenuScreenViewBase::setupScreen()
{

}

void MenuScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &drinkCoffee_button)
    {
        //drinkCoffee_button_clicked
        //When drinkCoffee_button clicked change screen to InstrOutScreen
        //Go to InstrOutScreen with screen transition towards East
        application().gotoInstrOutScreenScreenSlideTransitionEast();
    }
    if (&src == &fire_button)
    {
        //fire_button_clicked
        //When fire_button clicked change screen to ControlScreen
        //Go to ControlScreen with screen transition towards North
        application().gotoControlScreenScreenWipeTransitionNorth();
    }
}
